// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.2
// source: api/orgSet/orgSet.proto

package orgSet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOrgConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId int64 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetOrgConfRequest) Reset() {
	*x = GetOrgConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgSet_orgSet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgConfRequest) ProtoMessage() {}

func (x *GetOrgConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgSet_orgSet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgConfRequest.ProtoReflect.Descriptor instead.
func (*GetOrgConfRequest) Descriptor() ([]byte, []int) {
	return file_api_orgSet_orgSet_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrgConfRequest) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type SetOrgConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId                       int64 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	PortalLoginRequired         int32 `protobuf:"varint,2,opt,name=portalLoginRequired,proto3" json:"portalLoginRequired,omitempty"`
	ClassScheduleCreateBoard    int32 `protobuf:"varint,3,opt,name=classScheduleCreateBoard,proto3" json:"classScheduleCreateBoard,omitempty"`
	ScheduleCreateLiveclass     int32 `protobuf:"varint,4,opt,name=scheduleCreateLiveclass,proto3" json:"scheduleCreateLiveclass,omitempty"`
	ScheduleCreateLiveclassType int32 `protobuf:"varint,5,opt,name=scheduleCreateLiveclassType,proto3" json:"scheduleCreateLiveclassType,omitempty"`
	HandDeviceSupport           int32 `protobuf:"varint,6,opt,name=handDeviceSupport,proto3" json:"handDeviceSupport,omitempty"`
	ScheduleDisplayAll          int32 `protobuf:"varint,7,opt,name=scheduleDisplayAll,proto3" json:"scheduleDisplayAll,omitempty"`
}

func (x *SetOrgConfRequest) Reset() {
	*x = SetOrgConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgSet_orgSet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrgConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrgConfRequest) ProtoMessage() {}

func (x *SetOrgConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgSet_orgSet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrgConfRequest.ProtoReflect.Descriptor instead.
func (*SetOrgConfRequest) Descriptor() ([]byte, []int) {
	return file_api_orgSet_orgSet_proto_rawDescGZIP(), []int{1}
}

func (x *SetOrgConfRequest) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetOrgConfRequest) GetPortalLoginRequired() int32 {
	if x != nil {
		return x.PortalLoginRequired
	}
	return 0
}

func (x *SetOrgConfRequest) GetClassScheduleCreateBoard() int32 {
	if x != nil {
		return x.ClassScheduleCreateBoard
	}
	return 0
}

func (x *SetOrgConfRequest) GetScheduleCreateLiveclass() int32 {
	if x != nil {
		return x.ScheduleCreateLiveclass
	}
	return 0
}

func (x *SetOrgConfRequest) GetScheduleCreateLiveclassType() int32 {
	if x != nil {
		return x.ScheduleCreateLiveclassType
	}
	return 0
}

func (x *SetOrgConfRequest) GetHandDeviceSupport() int32 {
	if x != nil {
		return x.HandDeviceSupport
	}
	return 0
}

func (x *SetOrgConfRequest) GetScheduleDisplayAll() int32 {
	if x != nil {
		return x.ScheduleDisplayAll
	}
	return 0
}

type Stage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Years     int32    `protobuf:"varint,3,opt,name=years,proto3" json:"years,omitempty"`
	GradeName []string `protobuf:"bytes,4,rep,name=gradeName,proto3" json:"gradeName,omitempty"`
	State     int32    `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	IsDefault int32    `protobuf:"varint,6,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
}

func (x *Stage) Reset() {
	*x = Stage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgSet_orgSet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stage) ProtoMessage() {}

func (x *Stage) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgSet_orgSet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stage.ProtoReflect.Descriptor instead.
func (*Stage) Descriptor() ([]byte, []int) {
	return file_api_orgSet_orgSet_proto_rawDescGZIP(), []int{2}
}

func (x *Stage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Stage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stage) GetYears() int32 {
	if x != nil {
		return x.Years
	}
	return 0
}

func (x *Stage) GetGradeName() []string {
	if x != nil {
		return x.GradeName
	}
	return nil
}

func (x *Stage) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Stage) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type ScreenSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int32 `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *ScreenSet) Reset() {
	*x = ScreenSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgSet_orgSet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenSet) ProtoMessage() {}

func (x *ScreenSet) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgSet_orgSet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenSet.ProtoReflect.Descriptor instead.
func (*ScreenSet) Descriptor() ([]byte, []int) {
	return file_api_orgSet_orgSet_proto_rawDescGZIP(), []int{3}
}

func (x *ScreenSet) GetValue() []int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Stream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenSet []*ScreenSet `protobuf:"bytes,1,rep,name=screenSet,proto3" json:"screenSet,omitempty"`
}

func (x *Stream) Reset() {
	*x = Stream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgSet_orgSet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stream) ProtoMessage() {}

func (x *Stream) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgSet_orgSet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stream.ProtoReflect.Descriptor instead.
func (*Stream) Descriptor() ([]byte, []int) {
	return file_api_orgSet_orgSet_proto_rawDescGZIP(), []int{4}
}

func (x *Stream) GetScreenSet() []*ScreenSet {
	if x != nil {
		return x.ScreenSet
	}
	return nil
}

type StreamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeskStream      []*Stream `protobuf:"bytes,1,rep,name=deskStream,proto3" json:"deskStream,omitempty"`
	BigHeadStream   []*Stream `protobuf:"bytes,2,rep,name=bigHeadStream,proto3" json:"bigHeadStream,omitempty"`
	SmallHeadStream []*Stream `protobuf:"bytes,3,rep,name=smallHeadStream,proto3" json:"smallHeadStream,omitempty"`
	HeadFps         int32     `protobuf:"varint,4,opt,name=headFps,proto3" json:"headFps,omitempty"`
	DeskFps         int32     `protobuf:"varint,5,opt,name=deskFps,proto3" json:"deskFps,omitempty"`
}

func (x *StreamInfo) Reset() {
	*x = StreamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgSet_orgSet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInfo) ProtoMessage() {}

func (x *StreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgSet_orgSet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInfo.ProtoReflect.Descriptor instead.
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return file_api_orgSet_orgSet_proto_rawDescGZIP(), []int{5}
}

func (x *StreamInfo) GetDeskStream() []*Stream {
	if x != nil {
		return x.DeskStream
	}
	return nil
}

func (x *StreamInfo) GetBigHeadStream() []*Stream {
	if x != nil {
		return x.BigHeadStream
	}
	return nil
}

func (x *StreamInfo) GetSmallHeadStream() []*Stream {
	if x != nil {
		return x.SmallHeadStream
	}
	return nil
}

func (x *StreamInfo) GetHeadFps() int32 {
	if x != nil {
		return x.HeadFps
	}
	return 0
}

func (x *StreamInfo) GetDeskFps() int32 {
	if x != nil {
		return x.DeskFps
	}
	return 0
}

type GetOrgConfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortName                   string          `protobuf:"bytes,1,opt,name=shortName,proto3" json:"shortName,omitempty"`
	SchoolYear                  int32           `protobuf:"varint,2,opt,name=schoolYear,proto3" json:"schoolYear,omitempty"`
	StageList                   []*Stage        `protobuf:"bytes,3,rep,name=stageList,proto3" json:"stageList,omitempty"`
	PortalLogoUrl               string          `protobuf:"bytes,4,opt,name=portalLogoUrl,proto3" json:"portalLogoUrl,omitempty"`
	ManagementName              string          `protobuf:"bytes,5,opt,name=managementName,proto3" json:"managementName,omitempty"`
	ManagementLogoUrl           string          `protobuf:"bytes,6,opt,name=managementLogoUrl,proto3" json:"managementLogoUrl,omitempty"`
	StreamInfo                  *StreamInfo     `protobuf:"bytes,7,opt,name=streamInfo,proto3" json:"streamInfo,omitempty"`
	TeachGroupShowType          int32           `protobuf:"varint,8,opt,name=teachGroupShowType,proto3" json:"teachGroupShowType,omitempty"`
	TeachActivityFunc           []int32         `protobuf:"varint,9,rep,packed,name=teachActivityFunc,proto3" json:"teachActivityFunc,omitempty"`
	HandDeviceSupport           int32           `protobuf:"varint,10,opt,name=handDeviceSupport,proto3" json:"handDeviceSupport,omitempty"`
	PortalLoginRequired         int32           `protobuf:"varint,11,opt,name=portalLoginRequired,proto3" json:"portalLoginRequired,omitempty"`
	ClassScheduleCreateBoard    int32           `protobuf:"varint,12,opt,name=classScheduleCreateBoard,proto3" json:"classScheduleCreateBoard,omitempty"`
	ScheduleDisplayAll          int32           `protobuf:"varint,13,opt,name=scheduleDisplayAll,proto3" json:"scheduleDisplayAll,omitempty"`
	ClientModule                map[string]bool `protobuf:"bytes,14,rep,name=clientModule,proto3" json:"clientModule,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ScheduleCreateLiveclass     int32           `protobuf:"varint,15,opt,name=scheduleCreateLiveclass,proto3" json:"scheduleCreateLiveclass,omitempty"`
	ScheduleCreateLiveclassType int32           `protobuf:"varint,16,opt,name=scheduleCreateLiveclassType,proto3" json:"scheduleCreateLiveclassType,omitempty"`
}

func (x *GetOrgConfResponse) Reset() {
	*x = GetOrgConfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgSet_orgSet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgConfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgConfResponse) ProtoMessage() {}

func (x *GetOrgConfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgSet_orgSet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgConfResponse.ProtoReflect.Descriptor instead.
func (*GetOrgConfResponse) Descriptor() ([]byte, []int) {
	return file_api_orgSet_orgSet_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrgConfResponse) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *GetOrgConfResponse) GetSchoolYear() int32 {
	if x != nil {
		return x.SchoolYear
	}
	return 0
}

func (x *GetOrgConfResponse) GetStageList() []*Stage {
	if x != nil {
		return x.StageList
	}
	return nil
}

func (x *GetOrgConfResponse) GetPortalLogoUrl() string {
	if x != nil {
		return x.PortalLogoUrl
	}
	return ""
}

func (x *GetOrgConfResponse) GetManagementName() string {
	if x != nil {
		return x.ManagementName
	}
	return ""
}

func (x *GetOrgConfResponse) GetManagementLogoUrl() string {
	if x != nil {
		return x.ManagementLogoUrl
	}
	return ""
}

func (x *GetOrgConfResponse) GetStreamInfo() *StreamInfo {
	if x != nil {
		return x.StreamInfo
	}
	return nil
}

func (x *GetOrgConfResponse) GetTeachGroupShowType() int32 {
	if x != nil {
		return x.TeachGroupShowType
	}
	return 0
}

func (x *GetOrgConfResponse) GetTeachActivityFunc() []int32 {
	if x != nil {
		return x.TeachActivityFunc
	}
	return nil
}

func (x *GetOrgConfResponse) GetHandDeviceSupport() int32 {
	if x != nil {
		return x.HandDeviceSupport
	}
	return 0
}

func (x *GetOrgConfResponse) GetPortalLoginRequired() int32 {
	if x != nil {
		return x.PortalLoginRequired
	}
	return 0
}

func (x *GetOrgConfResponse) GetClassScheduleCreateBoard() int32 {
	if x != nil {
		return x.ClassScheduleCreateBoard
	}
	return 0
}

func (x *GetOrgConfResponse) GetScheduleDisplayAll() int32 {
	if x != nil {
		return x.ScheduleDisplayAll
	}
	return 0
}

func (x *GetOrgConfResponse) GetClientModule() map[string]bool {
	if x != nil {
		return x.ClientModule
	}
	return nil
}

func (x *GetOrgConfResponse) GetScheduleCreateLiveclass() int32 {
	if x != nil {
		return x.ScheduleCreateLiveclass
	}
	return 0
}

func (x *GetOrgConfResponse) GetScheduleCreateLiveclassType() int32 {
	if x != nil {
		return x.ScheduleCreateLiveclassType
	}
	return 0
}

type SetOrgConfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success string `protobuf:"bytes,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetOrgConfResponse) Reset() {
	*x = SetOrgConfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgSet_orgSet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrgConfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrgConfResponse) ProtoMessage() {}

func (x *SetOrgConfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgSet_orgSet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrgConfResponse.ProtoReflect.Descriptor instead.
func (*SetOrgConfResponse) Descriptor() ([]byte, []int) {
	return file_api_orgSet_orgSet_proto_rawDescGZIP(), []int{7}
}

func (x *SetOrgConfResponse) GetSuccess() string {
	if x != nil {
		return x.Success
	}
	return ""
}

var File_api_orgSet_orgSet_proto protoreflect.FileDescriptor

var file_api_orgSet_orgSet_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x2f, 0x6f, 0x72, 0x67,
	0x53, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x67, 0x53, 0x65, 0x74, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x22, 0xf1, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3a,
	0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61, 0x6e, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x68, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x41, 0x6c, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x65, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x79, 0x65, 0x61, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x09, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65,
	0x74, 0x52, 0x09, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x74, 0x22, 0xec, 0x01, 0x0a,
	0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x38, 0x0a, 0x0d, 0x62, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67,
	0x53, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0d, 0x62, 0x69, 0x67, 0x48,
	0x65, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x3c, 0x0a, 0x0f, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61,
	0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x46,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x46, 0x70,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x6b, 0x46, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x73, 0x6b, 0x46, 0x70, 0x73, 0x22, 0xf4, 0x06, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x2f, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x55,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x6f, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x36, 0x0a,
	0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x65, 0x61, 0x63, 0x68, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x74, 0x65, 0x61, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x68, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x65, 0x61, 0x63, 0x68, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x11, 0x74, 0x65, 0x61, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46,
	0x75, 0x6e, 0x63, 0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x68, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x2e, 0x0a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x41, 0x6c, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x6c, 0x6c, 0x12,
	0x54, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x53,
	0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x40, 0x0a, 0x1b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x32, 0xa3, 0x01, 0x0a, 0x07, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x4b,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x67, 0x53, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x21, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x50, 0x01, 0x5a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72,
	0x67, 0x53, 0x65, 0x74, 0x3b, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_orgSet_orgSet_proto_rawDescOnce sync.Once
	file_api_orgSet_orgSet_proto_rawDescData = file_api_orgSet_orgSet_proto_rawDesc
)

func file_api_orgSet_orgSet_proto_rawDescGZIP() []byte {
	file_api_orgSet_orgSet_proto_rawDescOnce.Do(func() {
		file_api_orgSet_orgSet_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_orgSet_orgSet_proto_rawDescData)
	})
	return file_api_orgSet_orgSet_proto_rawDescData
}

var file_api_orgSet_orgSet_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_orgSet_orgSet_proto_goTypes = []interface{}{
	(*GetOrgConfRequest)(nil),  // 0: api.orgSet.GetOrgConfRequest
	(*SetOrgConfRequest)(nil),  // 1: api.orgSet.SetOrgConfRequest
	(*Stage)(nil),              // 2: api.orgSet.Stage
	(*ScreenSet)(nil),          // 3: api.orgSet.ScreenSet
	(*Stream)(nil),             // 4: api.orgSet.Stream
	(*StreamInfo)(nil),         // 5: api.orgSet.StreamInfo
	(*GetOrgConfResponse)(nil), // 6: api.orgSet.GetOrgConfResponse
	(*SetOrgConfResponse)(nil), // 7: api.orgSet.SetOrgConfResponse
	nil,                        // 8: api.orgSet.GetOrgConfResponse.ClientModuleEntry
}
var file_api_orgSet_orgSet_proto_depIdxs = []int32{
	3, // 0: api.orgSet.Stream.screenSet:type_name -> api.orgSet.ScreenSet
	4, // 1: api.orgSet.StreamInfo.deskStream:type_name -> api.orgSet.Stream
	4, // 2: api.orgSet.StreamInfo.bigHeadStream:type_name -> api.orgSet.Stream
	4, // 3: api.orgSet.StreamInfo.smallHeadStream:type_name -> api.orgSet.Stream
	2, // 4: api.orgSet.GetOrgConfResponse.stageList:type_name -> api.orgSet.Stage
	5, // 5: api.orgSet.GetOrgConfResponse.streamInfo:type_name -> api.orgSet.StreamInfo
	8, // 6: api.orgSet.GetOrgConfResponse.clientModule:type_name -> api.orgSet.GetOrgConfResponse.ClientModuleEntry
	0, // 7: api.orgSet.OrgConf.GetOrgConf:input_type -> api.orgSet.GetOrgConfRequest
	1, // 8: api.orgSet.OrgConf.SetOrgConf:input_type -> api.orgSet.SetOrgConfRequest
	6, // 9: api.orgSet.OrgConf.GetOrgConf:output_type -> api.orgSet.GetOrgConfResponse
	7, // 10: api.orgSet.OrgConf.SetOrgConf:output_type -> api.orgSet.SetOrgConfResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_api_orgSet_orgSet_proto_init() }
func file_api_orgSet_orgSet_proto_init() {
	if File_api_orgSet_orgSet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_orgSet_orgSet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgSet_orgSet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrgConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgSet_orgSet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgSet_orgSet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgSet_orgSet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgSet_orgSet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgSet_orgSet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgConfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgSet_orgSet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrgConfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_orgSet_orgSet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_orgSet_orgSet_proto_goTypes,
		DependencyIndexes: file_api_orgSet_orgSet_proto_depIdxs,
		MessageInfos:      file_api_orgSet_orgSet_proto_msgTypes,
	}.Build()
	File_api_orgSet_orgSet_proto = out.File
	file_api_orgSet_orgSet_proto_rawDesc = nil
	file_api_orgSet_orgSet_proto_goTypes = nil
	file_api_orgSet_orgSet_proto_depIdxs = nil
}
