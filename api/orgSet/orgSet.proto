syntax = "proto3";
package api.orgSet;

option go_package = "api/orgSet;orgSet";
option java_multiple_files = true;
option java_package = "api.orgSet";


message GetOrgConfRequest {
	int64 orgId = 1;
} 

message SetOrgConfRequest {
	int64 orgId = 1;
	string desk_stream = 2;                    
	string big_head_stream = 3;                      
	string small_head_stream = 4;                       
	int32 teach_group_show_type = 5;                       
	string teach_activity_func = 6;                      
	int32 desk_fps = 7;                         
	int32 head_fps = 8;                         
	int64 p_storage_cap = 9;                       
	int32 enable_obs_ws = 10;                       
	string yxt_video_rate = 11;                      
	int32 hand_device_support = 12;                      
	int32 portal_login_required = 13;                    
	int32 class_schedule_create_board = 14;              
	int32 schedule_display_all = 15;                     
	int32 schedule_create_liveclass = 16;                
	int32 schedule_create_liveclass_type = 17;  
} 

message GetOrgConfResponse {
	string shortName = 1;
	int32 schoolYear = 2;
	bytes stageList = 3;
	string portalLogoUrl = 4;
	string managementName = 5;
	string managementLogoUrl = 6;
	bytes streamInfo = 7;
	int32 teachGroupShowType = 8;
	bytes teachActivityFunc = 9;
	int32 handDeviceSupport = 10;
	int32 portalLoginRequired = 11;
	int32 classScheduleCreateBoard = 12;
	int32 scheduleDisplayAll = 13;
	map<string, bool> clientModule = 14;
	int32 scheduleCreateLiveclass = 15;
	int32 scheduleCreateLiveclassType = 16;
	string orgName = 17;
	int64 levelTypeId = 18;
}

message SetOrgConfResponse {
	string success = 1;
}


service OrgConf {
	// 获取后台配置
	rpc GetOrgConf (GetOrgConfRequest) returns (GetOrgConfResponse);
	// 设置后台配置
	rpc SetOrgConf (SetOrgConfRequest) returns (SetOrgConfResponse);
}
